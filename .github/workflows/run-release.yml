name: Checks

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string

      node-version:
        required: false
        type: string

      snapshot:
        required: false
        type: boolean

    secrets:
      NPM_TOKEN:
        required: true

jobs:
  release:
    name: Release
    timeout-minutes: 5
    runs-on: ${{ inputs.runs-on || 'ubuntu-latest' }}

    steps:
      - name: Checkout And Install
        uses: zaripych/repka/.github/actions/checkout-and-install@checkout-and-install-latest
        with:
          node-version: ${{ inputs.node-version }}

      - id: create-and-publish-snapshot
        name: Create and Publish Snapshot
        if: ${{ inputs.snapshot }}
        shell: bash
        run: |
          set -eu

          package_json_path="./packages/build-tools/ts/package.json"

          # Change package.json version to create snapshot
          pnpm changeset version --snapshot snap

          # Skip if there are no changes in the package.json
          if git diff --quiet HEAD -- $package_json_path; then
              echo "No changes in package.json"
              exit 0
          else
              echo "Found changes in package.json"
          fi

          pnpm -r --filter @repka-kit/ts... "/build:tools|declarations/"

          echo "snapshot-version=$(jq -r .version $package_json_path)" >> \
            "$GITHUB_OUTPUT"

          # Dry run publish to print files to be published
          pnpm publish \
            -r --no-git-checks --tag snap \
            --access public --dry-run

          pnpm changeset publish --no-git-tag --tag snap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build
        if: ${{ ! inputs.snapshot }}
        shell: bash
        run: pnpm -r --filter @repka-kit/ts... "/build:tools|declarations/"

      - name: Create and Publish Versions
        if: ${{ ! inputs.snapshot }}
        uses: changesets/action@v1
        with:
          commit: 'chore: update versions'
          title: 'chore: update versions'
          version: pnpm run ci:version
          publish: pnpm changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
