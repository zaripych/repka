name: Checks

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string

      node-version:
        required: false
        type: string

      snapshot:
        required: false
        type: boolean

    secrets:
      NPM_TOKEN:
        required: true

jobs:
  release:
    name: Release
    timeout-minutes: 5
    runs-on: ${{ inputs.runs-on || 'ubuntu-latest' }}

    steps:
      - name: Checkout And Install
        uses: zaripych/repka/.github/actions/checkout-and-install@checkout-and-install-latest
        with:
          node-version: ${{ inputs.node-version }}

      - id: create-and-publish-snapshot
        name: Create and Publish Snapshot
        if: ${{ inputs.snapshot }}
        shell: bash
        run: >-
          pnpm changeset version --snapshot snap &&
          pnpm -r --filter @repka-kit/ts... "/build:tools|declarations/" &&
          echo "snapshot-version=$(jq -r .version ./packages/build-tools/ts/package.json)" >> "$GITHUB_OUTPUT" &&
          pnpm changeset publish --no-git-tag --tag snap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - id: message-about-snapshot
        name: Message About Snapshot Release
        if: ${{ inputs.snapshot }}
        shell: bash
        run: |
          set -eu

          # Message to be posted as a comment
          export MESSAGE="üëç We have just released \`@repka-kit/ts@$VERSION\`, you can install it using:

          \`\`\`sh
          npm install @repka-kit/ts@$VERSION
          \`\`\`
          "

          # Ensure we do not comment more than once
          export number_of_comments=$(gh pr view "$PR_URL" --json comments --jq '.comments | map(select(.author.login == "github-actions")) | length')

          if [ "$number_of_comments" -eq 0 ]; then
              echo "Found zero comments, adding the comment"
              gh pr comment "$PR_URL" --body "$MESSAGE"
          fi
        env:
          VERSION: ${{ steps.create-and-publish-snapshot.outputs.snapshot-version }}
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        if: ${{ ! inputs.snapshot }}
        shell: bash
        run: pnpm -r --filter @repka-kit/ts... "/build:tools|declarations/"

      - name: Create and Publish Versions
        if: ${{ ! inputs.snapshot }}
        uses: changesets/action@v1
        with:
          commit: 'chore: update versions'
          title: 'chore: update versions'
          version: pnpm run ci:version
          publish: pnpm changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
